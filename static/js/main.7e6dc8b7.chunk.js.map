{"version":3,"sources":["components/Input.jsx","components/button.jsx","components/display.jsx","components/profile.jsx","components/bar.jsx","main/AppRetire.jsx","serviceWorker.js","index.js"],"names":["components_Input","props","react_default","a","createElement","className","htmlFor","type","min","step","id","src_components_button","onClick","e","click","label","components_display","value","components_profile","href","components_bar","target","rel","Retire","perfil","idade","valor","meses","txd","monthsRetired","txdM","Math","pow","vp","i","result","document","getElementById","valor1","valor2","valor3","innerHTML","this","investir","Number","res","round","console","log","_this","calcular","n","Component","Boolean","window","location","hostname","match","ReactDOM","render","AppRetire_Retire","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wVAGeA,eAAA,SAAAC,GACX,OAEIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAUC,QAAQ,UAAnC,6BACAJ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAcE,KAAK,SAASC,IAAI,IAAIC,KAAK,KAAKC,GAAG,WAAWR,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACnFF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAUC,QAAQ,UAAnC,0DACAJ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAcE,KAAK,SAASC,IAAI,IAAIC,KAAK,IAAIC,GAAG,WAAWR,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAClFF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UAAUC,QAAQ,UAAnC,gDACAJ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,0CACLF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAcE,KAAK,SAASC,IAAI,IAAIC,KAAK,IAAIC,GAAG,cCV9DC,SAAA,SAAAV,GACX,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASO,QAAS,SAAAC,GAAC,OAAIZ,EAAMa,OAASb,EAAMa,MAAMb,EAAMc,SAA1E,cCFOC,SAAA,SAAAf,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUK,GAAG,WAA5B,MAA0CT,EAAMgB,MAAhD,SCDWC,SAAA,SAAAjB,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUK,GAAG,SAA/B,0BACAR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,KAAGe,KAAK,KAAKd,UAAU,SAASY,MAAO,IAAML,QAAS,SAAAC,GAAC,OAAIZ,EAAMa,OAASb,EAAMa,MAAM,gBAAgBJ,GAAG,eAAzG,eACAR,EAAAC,EAAAC,cAAA,KAAGe,KAAK,KAAKd,UAAU,SAASY,MAAO,IAAML,QAAS,SAAAC,GAAC,OAAIZ,EAAMa,OAASb,EAAMa,MAAM,aAAaJ,GAAG,YAAtG,YACAR,EAAAC,EAAAC,cAAA,KAAGe,KAAK,KAAKd,UAAU,SAASY,MAAO,IAAML,QAAS,SAAAC,GAAC,OAAIZ,EAAMa,OAASb,EAAMa,MAAM,cAAcJ,GAAG,aAAvG,iBCPDU,SAAA,SAAAnB,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,KAAGe,KAAK,yCAAyCE,OAAO,SAASC,IAAI,uBACjEpB,EAAAC,EAAAC,cAAA,mGAIJF,EAAAC,EAAAC,cAAA,WANJ,uBAO0BF,EAAAC,EAAAC,cAAA,KAAGe,KAAK,8BAA8BE,OAAO,SAASC,IAAI,uBAAsBpB,EAAAC,EAAAC,cAAA,qCCJ7FmB,mLACRC,EAAOC,EAAMC,EAAMC,GACxB,IAAIC,EAAM,EAENA,EADQ,gBAATJ,EACO,GACU,aAATA,EACD,IAEA,IAUV,IAPA,IACIK,EADc,MAC0B,GAARJ,EAAaE,GAE7CG,EAAOC,KAAKC,IAAM,EAAIJ,EAAQ,EAAI,IAAQ,EAE1CK,EAAK,EAEDC,EAAI,EAAGA,EAAIL,EAAeK,IAC9BD,GAAOP,EAAQK,KAAKC,IAAK,EAAIJ,GAAOM,EAAE,EAAEP,GAAO,IASnD,OANAM,GAAM,OAEgBF,KAAKC,IAAK,EAAIF,EAAQH,GAAS,IAAQI,KAAKC,IAAK,EAAEF,EAAQH,GAASG,oCAOrF3B,GACL,IAAIgC,EAAS,EACTX,EAASY,SAASC,eAAe,SAErB,gBAAJlC,EAAwB,aAAJA,EAAqB,cAAJA,IAE7CA,EAAI,eAER,IAAImC,EAASF,SAASC,eAAe,UAAUpB,MAC3CsB,EAASH,SAASC,eAAe,UAAUpB,MAC3CuB,EAASJ,SAASC,eAAe,UAAUpB,MAK/C,GAHAO,EAAOiB,UAAYtC,IAEE,KAATmC,EAAqB,KAATC,EAAqB,KAATC,GAC1B,CAENL,EAASO,KAAKC,SAASxC,EAAEyC,OAAON,GAAQM,OAAOL,GAAQK,OAAOJ,IAE9D,IAAIK,EAAM,MAAQd,KAAKe,MAAMX,GAAU,MACvCY,QAAQC,IAAI,aAAeH,GAC3BT,SAASC,eAAe,WAAWI,UAAYI,oCAI9C,IAAAI,EAAAP,KACDQ,EAAW,SAAA/C,GAAC,OAAI8C,EAAKC,SAAS/C,IAClC,OACID,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,yCAGAF,EAAAC,EAAAC,cAACY,EAAD,CAASC,MAAO,IAChBf,EAAAC,EAAAC,cAACc,EAAD,CAASJ,MAAO,SAAAqC,GAAC,OAAID,EAASC,MAAKjD,EAAAC,EAAAC,cAAA,WACnCF,EAAAC,EAAAC,cAACJ,EAAD,CAAKe,MAAM,aACXb,EAAAC,EAAAC,cAACO,EAAD,CAAUG,MAAO,SAAAqC,GAAC,OAAID,EAASC,OAE/BjD,EAAAC,EAAAC,cAACgB,EAAD,cArEgBgC,aCIhBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASxB,SAASC,eAAe,SD2H3C,kBAAmBwB,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7e6dc8b7.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Input.css'\r\n\r\nexport default props => {\r\n    return (\r\n        \r\n        <div>\r\n            <label className=\"inp-tex\" htmlFor=\"valor0\">Quantos anos você tem?</label>\r\n            <input className=\"inp-inp-tex\" type=\"number\" min=\"0\" step=\".1\" id=\"valor0\" /><br /><br />\r\n            <label className=\"inp-tex\" htmlFor=\"valor1\">Quanto você quer recebr por mês ao se aposentar?</label>\r\n            <input className=\"inp-inp-tex\" type=\"number\" min=\"0\" step=\"1\" id=\"valor1\" /><br /><br />\r\n            <label className=\"inp-tex\" htmlFor=\"valor2\">Em quanto tempo você pretende apostentar?</label>\r\n            <br/><small>Coloque o tempo em meses.</small>\r\n            <input className=\"inp-inp-tex\" type=\"number\" min=\"0\" step=\"1\" id=\"valor2\" />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './button.css'\r\n\r\nexport default props =>{\r\n    return(\r\n        <button className='button' onClick={e => props.click && props.click(props.label)} >Calcular</button>\r\n    )\r\n    }","import React from 'react'\r\nimport '../components/display.css'\r\n\r\nexport default props =>\r\n    <div className=\"display\" id=\"display\">R$ {props.value},00</div>","import React from 'react'\r\nimport './profile.css'\r\n\r\nexport default props => {\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <button className=\"dropbtn\" id='drops'>Selecione o seu perfil</button>\r\n            <div className=\"dropdown-content\">\r\n                <a href=\"/#\" className=\"perfil\" value={0.08} onClick={e => props.click && props.click(\"Conservador\")} id=\"conservador\">Conservador</a>\r\n                <a href=\"/#\" className=\"perfil\" value={0.12} onClick={e => props.click && props.click(\"Moderado\")} id=\"moderado\">Moderado</a>\r\n                <a href=\"/#\" className=\"perfil\" value={0.16} onClick={e => props.click && props.click(\"Arriscado\")} id=\"arriscado\">Arriscado</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './bar.css'\r\n\r\nexport default props => {\r\n    return (\r\n        <div className=\"botton-nav\">\r\n            <a href=\"https://www.paulomoises.com/#section-7\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <strong>\r\n                    Clique aqui para mais informações sobre Planejamento de sua aposentadoria.\r\n                </strong>\r\n            </a>\r\n            <br />\r\n            Made with &hearts; by <a href=\"https://www.paulomoises.com\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Paulo Moisés</strong></a>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport './AppRetire.css'\r\nimport Btn from '../components/Input'\r\nimport Buttonok from '../components/button.jsx'\r\nimport Display from '../components/display.jsx'\r\nimport Profile from '../components/profile.jsx'\r\nimport Navbar from '../components/bar.jsx'\r\n\r\nexport default class Retire extends Component {\r\n    investir(perfil,idade,valor,meses){\r\n        var txd = 0\r\n        if(perfil===\"Conservador\"){\r\n            txd = 0.10\r\n        } else if (perfil===\"Moderado\"){\r\n            txd = 0.12\r\n        } else{\r\n            txd = 0.14\r\n        }\r\n\r\n        var monthsToDie = 1320\r\n        var monthsRetired = monthsToDie - ( idade * 12 + meses )\r\n\r\n        var txdM = Math.pow(( 1 + txd ),( 1 / 12 )) - 1\r\n\r\n        var vp = 0\r\n\r\n        for(var i = 0; i < monthsRetired; i++){\r\n            vp += (valor / Math.pow((1 + txd),((i+1+meses)/12)))\r\n        }\r\n        \r\n        vp *= 1.05\r\n\r\n        var parcela = ((vp / (Math.pow((1 + txdM) , meses) - 1 )) * (Math.pow((1+txdM) , meses) * txdM))\r\n\r\n        var result = parcela\r\n\r\n        return result\r\n    }\r\n\r\n    calcular(a) {\r\n        let result = 0;\r\n        let perfil = document.getElementById(\"drops\")\r\n        \r\n        let bool1 = a!==\"Conservador\" & a!==\"Moderado\" & a!==\"Arriscado\"\r\n        if (bool1) {\r\n            a = \"Conservador\"            \r\n        }\r\n        let valor1 = document.getElementById(\"valor0\").value\r\n        let valor2 = document.getElementById(\"valor1\").value\r\n        let valor3 = document.getElementById(\"valor2\").value\r\n        \r\n        perfil.innerHTML = a\r\n        \r\n        let bool2 = valor1===\"\"&valor2===\"\"&valor3===\"\"\r\n        if(!bool2){\r\n\r\n            result = this.investir(a,Number(valor1),Number(valor2),Number(valor3))\r\n            \r\n            let res = 'R$ ' + Math.round(result) + ',00'\r\n            console.log(\"calcular: \" + res)\r\n            document.getElementById(\"display\").innerHTML = res\r\n        }else{\r\n        }\r\n    }\r\n    render() {\r\n        var calcular = a => this.calcular(a)\r\n        return (\r\n            <div>\r\n                <div className=\"retire\">\r\n                    <h1>\r\n                        Planejamento de Aposentaria\r\n                     </h1>\r\n                    <Display value={0} />\r\n                    <Profile click={n => calcular(n)}/><br />\r\n                    <Btn label=\"Calcular\" />\r\n                    <Buttonok click={n => calcular(n)} />\r\n                </div>\r\n                    <Navbar />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/AppRetire';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}